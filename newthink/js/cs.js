// Generated by CoffeeScript 1.10.0

/* 
Comment
 */

(function() {
  var Animal, Dog, aString, age, areYouHappy, balance, chicken, chickenName, childAge, coat, combinedArray, csoutput, derek, employee, employeeIndex, employees, eventsOnly, fName, factorial, getRandNum, gloves, hat, helloFunc, i, j, k, l, lName, largeNumStr, largestNum, len, len1, len2, len3, len4, longStr, m, monkeys, movieRank, n, name, o, oneTo10, p, peopleArray, precisionTest, randArray, randNum, smallNumStr, smallestNum, sparky, strArray, sumNums, sumOfArray, tenTo1, votingAge, x, y,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    slice = [].slice,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  name = "Phil";

  csoutput = document.getElementById("csoutput");

  csoutput.innerHTML = "Hello " + name + "<br>";

  aString = "I'm a String";

  if (typeof aString === 'string') {
    csoutput.insertAdjacentHTML('beforeend', 'aString is a String<br>');
  }

  largestNum = Number.MAX_VALUE;

  smallestNum = Number.MIN_VALUE;

  largeNumStr = "The largest numer is " + largestNum + "<br>";

  smallNumStr = "The smallest number is " + smallestNum + "<br>";

  csoutput.insertAdjacentHTML('beforeend', largeNumStr + '<br>');

  csoutput.insertAdjacentHTML('beforeend', smallNumStr + '<br>');

  areYouHappy = false;

  if (typeof areYouHappy === 'boolean') {
    csoutput.insertAdjacentHTML('beforeend', 'areYouHappy is a boolean<br>');
  }

  csoutput.insertAdjacentHTML('beforeend', "5 + 2 = " + (5 + 2) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', '5 + 2 = #{5 + 2}<br>');

  csoutput.insertAdjacentHTML('beforeend', "5 - 2 = " + (5 - 2) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "5 * 2 = " + (5 * 2) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "5 / 2 = " + (5 / 2) + "<br>");

  precisionTest = 0.1000000001;

  csoutput.insertAdjacentHTML('beforeend', "Precision: " + (precisionTest + 0.10000000011) + "<br>");

  balance = 1563.87;

  csoutput.insertAdjacentHTML('beforeend', ((balance / 12).toFixed(2)) + "<br>");

  randNum = 5;

  csoutput.insertAdjacentHTML('beforeend', "randNum++ = " + (randNum++) + "<br>");

  randNum = 5;

  csoutput.insertAdjacentHTML('beforeend', "randNum+=5 : " + (randNum += 5) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "3+2*5 = " + (3 + 2 * 5) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "(3+2)*5 = " + ((3 + 2) * 5) + "<br>");

  randNum = Math.floor(Math.random() * 100) + 1;

  csoutput.insertAdjacentHTML('beforeend', "randNum = " + randNum + "<br>");

  fName = "Kamil";

  lName = "Abzalov";

  csoutput.insertAdjacentHTML('beforeend', fName + " " + lName + "<br>");

  longStr = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quidem quas, error odit iusto officia amet hic magni aperiam. Ea sit iusto qui aperiam quisquam facere fugiat, sequi a laboriosam totam.";

  csoutput.insertAdjacentHTML('beforeend', "String length: " + longStr.length + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "Index of: " + (longStr.indexOf("ipsum")) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "Index 8: " + (longStr.charAt(8)) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "Substring: " + (longStr.slice(27, 31)) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "After 27: " + (longStr.slice(27)) + "<br>");

  longStr = longStr.replace("Lorem", "hi");

  csoutput.insertAdjacentHTML('beforeend', "Replace : " + longStr + "<br>");

  strArray = longStr.split(" ");

  for (j = 0, len = strArray.length; j < len; j++) {
    x = strArray[j];
    csoutput.insertAdjacentHTML('beforeend', x + "<br>");
  }

  longStr = longStr.trim();

  csoutput.insertAdjacentHTML('beforeend', (longStr.toUpperCase()) + "<br>");

  age = 3;

  if (age >= 18) {
    csoutput.insertAdjacentHTML('beforeend', "You can vote<br>");
  } else if (age >= 16) {
    csoutput.insertAdjacentHTML('beforeend', "You can drive<br>");
  } else {
    csoutput.insertAdjacentHTML('beforeend', "You can't drive and vote<br>");
  }

  if (!(age >= 19)) {
    csoutput.insertAdjacentHTML('beforeend', "You are in scholl<br>");
  } else {
    csoutput.insertAdjacentHTML('beforeend', "You are in college<br>");
  }

  if (!(age > 4) || (age > 65)) {
    csoutput.insertAdjacentHTML('beforeend', "You can't drive and vote<br>");
  } else if ((age >= 5) && (age <= 6)) {
    csoutput.insertAdjacentHTML('beforeend', "Go to the garden<br>");
  } else if ((age > 6) && (age <= 18)) {
    csoutput.insertAdjacentHTML('beforeend', "Go to the school<br>");
  } else {
    csoutput.insertAdjacentHTML('beforeend', "Go to the work<br>");
  }

  votingAge = age > 18 ? true : false;

  csoutput.insertAdjacentHTML('beforeend', votingAge + "<br>");

  childAge = 7;

  switch (childAge) {
    case 5:
      csoutput.insertAdjacentHTML('beforeend', "Go to the garden<br>");
      break;
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      csoutput.insertAdjacentHTML('beforeend', "Go to the school<br>");
  }

  if (age != null) {
    csoutput.insertAdjacentHTML('beforeend', age + " years old<br>");
  }

  chicken = null;

  chickenName = chicken != null ? chicken : "Fred";

  csoutput.insertAdjacentHTML('beforeend', chickenName + "<br>");

  hat = "Hat";

  coat = "Coat";

  gloves = null;

  if ((hat != null) && (coat != null)) {
    csoutput.insertAdjacentHTML('beforeend', hat + " and " + coat + " " + (gloves != null ? gloves : 'Winter Floves') + "<br>");
  }

  randArray = ["word", false, 1234, 1.234];

  csoutput.insertAdjacentHTML('beforeend', "Last 2: " + randArray.slice(2, 4) + "<br>");

  oneTo10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

  tenTo1 = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1];

  combinedArray = oneTo10.concat(tenTo1);

  oneTo10.push.apply(oneTo10, tenTo1);

  for (k = 0, len1 = oneTo10.length; k < len1; k++) {
    x = oneTo10[k];
    csoutput.insertAdjacentHTML('beforeend', x + "<br>");
  }

  csoutput.insertAdjacentHTML('beforeend', (oneTo10.toString()) + "<br>");

  eventsOnly = oneTo10.filter(function(x) {
    return x % 2 === 0;
  });

  csoutput.insertAdjacentHTML('beforeend', (eventsOnly.toString()) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "Max: " + (Math.max.apply(Math, oneTo10)) + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "Min: " + (Math.min.apply(Math, oneTo10)) + "<br>");

  sumOfArray = oneTo10.reduce(function(x, y) {
    return x + y;
  });

  csoutput.insertAdjacentHTML('beforeend', "Sum: " + sumOfArray + "<br>");

  csoutput.insertAdjacentHTML('beforeend', "Reverse: " + (tenTo1.reverse()) + "<br>");

  peopleArray = [
    {
      name: "Paul",
      age: 43
    }, {
      name: "Sue",
      age: 39
    }
  ];

  csoutput.insertAdjacentHTML('beforeend', "First Name: " + peopleArray[0].name + "<br>");

  oneTo10 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

  for (l = 0, len2 = oneTo10.length; l < len2; l++) {
    x = oneTo10[l];
    csoutput.insertAdjacentHTML('beforeend', x + "<br>");
  }

  for (m = 0, len3 = oneTo10.length; m < len3; m++) {
    x = oneTo10[m];
    if (x % 2 !== 0) {
      csoutput.insertAdjacentHTML('beforeend', x + "<br>");
    }
  }

  for (x = n = 50; n <= 100; x = ++n) {
    if (x % 2 === 0) {
      csoutput.insertAdjacentHTML('beforeend', x + "<br>");
    }
  }

  for (x = o = 20; o <= 40; x = o += 2) {
    csoutput.insertAdjacentHTML('beforeend', x + "<br>");
  }

  employees = ["Doug", "Sue", "Paul"];

  for (employeeIndex = p = 0, len4 = employees.length; p < len4; employeeIndex = ++p) {
    employee = employees[employeeIndex];
    csoutput.insertAdjacentHTML('beforeend', "Index:" + employeeIndex + " Employee: " + employee + "<br>");
  }

  if (indexOf.call(employees, "Doug") >= 0) {
    csoutput.insertAdjacentHTML('beforeend', "I found Doug<br>");
  }

  i = 100;

  while ((i += 1) <= 110) {
    csoutput.insertAdjacentHTML('beforeend', "i = " + i + "<br>");
  }

  monkeys = 10;

  while (monkeys -= 1) {
    csoutput.insertAdjacentHTML('beforeend', monkeys + " маленьких обезьян ели 100 бананов<br>");
  }

  x = 0;

  while (true) {
    csoutput.insertAdjacentHTML('beforeend', (++x) + "<br>");
    if (x === 5) {
      break;
    }
  }

  helloFunc = function(name) {
    return "Hello " + name;
  };

  csoutput.insertAdjacentHTML('beforeend', (helloFunc("Derek")) + "<br>");

  getRandNum = function() {
    return Math.floor(Math.random() * 100) + 1;
  };

  csoutput.insertAdjacentHTML('beforeend', "Random Number: " + (getRandNum()) + "<br>");

  sumNums = function() {
    var len5, q, sum, vars;
    vars = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    sum = 0;
    for (q = 0, len5 = vars.length; q < len5; q++) {
      x = vars[q];
      sum += x;
    }
    return sum;
  };

  csoutput.insertAdjacentHTML('beforeend', "Sum: " + (sumNums(1, 2, 3, 4, 5)) + "<br>");

  movieRank = function(stars) {
    if (stars == null) {
      stars = 1;
    }
    if (stars <= 2) {
      return "Bad";
    } else {
      return "Good";
    }
  };

  csoutput.insertAdjacentHTML('beforeend', "Movie Rank: " + (movieRank()) + "<br>");

  factorial = function(x) {
    if (x < 0) {
      return 0;
    }
    if (x === 0 || x === 1) {
      return 1;
    }
    return x * factorial(x - 1);
  };

  csoutput.insertAdjacentHTML('beforeend', "Factorial 5: " + (factorial(5)) + "<br>");

  derek = {
    name: "Derek",
    age: 41,
    street: "123 Main"
  };

  csoutput.insertAdjacentHTML('beforeend', "Name: " + derek.name + "<br>");

  derek.state = "Klyazma";

  for (x in derek) {
    y = derek[x];
    csoutput.insertAdjacentHTML('beforeend', x + " is " + y + "<br>");
  }

  Animal = (function() {
    var grover;

    Animal.prototype.name = "No name";

    Animal.prototype.height = 0;

    Animal.prototype.weight = 0;

    Animal.prototype.sound = "No sound";

    Animal.numOfAnimals = 0;

    Animal.getNumOfAnimals = function() {
      return Animal.numOfAnimals;
    };

    function Animal(name, height1, weight1) {
      if (name == null) {
        name = "No name";
      }
      this.height = height1 != null ? height1 : 0;
      this.weight = weight1 != null ? weight1 : 0;
      this.name = name;
      Animal.numOfAnimals++;
      ({
        makeSound: function() {
          return "says " + this.sound;
        }
      });
    }

    Animal.prototype.getInfo = function() {
      return this.name + " is " + this.weight + " cm and wight " + this.weight;
    };

    grover = new Animal();

    grover.name = "Grover";

    grover.height = 60;

    grover.weight = 35;

    csoutput.insertAdjacentHTML('beforeend', (grover.getInfo()) + "<br>");

    Animal.prototype.isItBig = function() {
      if (this.height >= 45) {
        return "Yes";
      } else {
        return "No";
      }
    };

    csoutput.insertAdjacentHTML('beforeend', "Is grover Big " + (grover.isItBig()) + "<br>");

    return Animal;

  })();

  csoutput.insertAdjacentHTML('beforeend', "Number of Animals " + (Animal.getNumOfAnimals()) + "<br>");

  Dog = (function(superClass) {
    extend(Dog, superClass);

    Dog.prototype.sound2 = "No sound";

    function Dog(name, height, weight) {
      if (name == null) {
        name = "No name";
      }
      if (height == null) {
        height = 0;
      }
      if (weight == null) {
        weight = 0;
      }
      Dog.__super__.constructor.call(this, name, height, weight);
    }

    Dog.prototype.makeSound = function() {
      return Dog.__super__.makeSound.apply(this, arguments) + (" and " + this.sound2);
    };

    return Dog;

  })(Animal);

  sparky = new Dog("Sparky");

  sparky.sound = "Wooof";

  sparky.sound = "Grrr";

  csoutput.insertAdjacentHTML('beforeend', (sparky.getInfo()) + "<br>");

}).call(this);
